services:
  ai_backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai_backend
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - SERVER_PORT=8080
      - DB_CONNECTION_STRING=postgresql://ai_service:${DB_PASSWORD:-your_secure_password}@postgres/ai_backend
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
      - JWT_SECRET=${JWT_SECRET:-change_me_in_production}
    volumes:
      - uploads:/app/uploads
    networks:
      - backend_network
    ports:
      - "8080:8080"

  postgres:
    image: postgres:14
    container_name: ai_backend_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ai_service
      - POSTGRES_PASSWORD=${DB_PASSWORD:-your_secure_password}
      - POSTGRES_DB=ai_backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend_network
    ports:
      - "5432:5432"

  nginx:
    image: nginx:1.21
    container_name: ai_backend_nginx
    restart: unless-stopped
    depends_on:
      - ai_backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
      - uploads:/var/www/ai_backend/uploads:ro
    networks:
      - backend_network

volumes:
  postgres_data:
  uploads:

networks:
  backend_network:
    driver: bridge
